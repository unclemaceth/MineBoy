"use client";
import React, { useRef, useCallback, useEffect } from "react";

interface FanSandwichProps {
  /** true while mining; false to trigger graceful coast & stop */
  spinning: boolean;
  size?: number;
}

/**
 * Complete fan sandwich with:
 * - ABFan3.1.svg (background/base)
 * - ABFan3.2.svg (spinning blades) 
 * - ABFan3.3.svg (grill overlay)
 */
export default function FanSandwich({ spinning, size = 100 }: FanSandwichProps) {
  // Tunables (ms per revolution)
  const IDLE_DUR = 1200;     // visual "at rest" / initial spool start
  const FAST_DUR = 220;      // steady fast speed while mining
  const PEAK_DUR = 150;      // brief overdrive at start to "whoosh"
  const COAST_DUR = 2200;    // target while coasting down
  const STOP_AFTER_DUR = 2000; // when coasting and duration exceeds this, stop next cycle
  const SMOOTH = 0.25;       // 0..1: how aggressively we move duration toward target each rev

  const bladesRef = useRef<HTMLDivElement>(null);
  const animationRef = useRef<number | null>(null);

  // Refs to manage loop state outside render
  const runningRef = useRef(false);
  const spinningRef = useRef(spinning);
  const currentDurRef = useRef<number>(IDLE_DUR);
  const targetDurRef = useRef<number>(IDLE_DUR);
  const peakCyclesLeftRef = useRef<number>(0);
  const startTimeRef = useRef<number>(0);

  // keep latest prop in a ref for callbacks
  useEffect(() => {
    spinningRef.current = spinning;
  }, [spinning]);

  const step = useCallback(() => {
    const duration = Math.max(16, currentDurRef.current);
    startTimeRef.current = performance.now();
    
    const animate = (currentTime: number) => {
      const elapsed = currentTime - startTimeRef.current;
      const progress = Math.min(elapsed / duration, 1);
      
      // Linear rotation from 0 to 360 degrees
      const angle = progress * 360;
      
      if (bladesRef.current) {
        bladesRef.current.style.transform = `rotate(${angle}deg)`;
      }
      
      if (progress < 1 && runningRef.current) {
        animationRef.current = requestAnimationFrame(animate);
      } else {
        // Revolution complete
        if (!runningRef.current) return; // loop was told to stop
        
        // If we're still in PEAK, count down those cycles
        if (peakCyclesLeftRef.current > 0) {
          peakCyclesLeftRef.current -= 1;
        }

        // Decide what our target duration is for the next rev
        if (spinningRef.current) {
          // while mining: brief PEAK then FAST
          targetDurRef.current = peakCyclesLeftRef.current > 0 ? PEAK_DUR : FAST_DUR;
        } else {
          // mining stopped: coast
          targetDurRef.current = COAST_DUR;
        }

        // Smoothly move current duration toward target
        const cd = currentDurRef.current;
        const td = targetDurRef.current;
        currentDurRef.current = cd + (td - cd) * SMOOTH;

        // If we're coasting and sufficiently slow, stop after this rev
        if (!spinningRef.current && currentDurRef.current > STOP_AFTER_DUR) {
          runningRef.current = false;
          // settle the needle
          if (bladesRef.current) {
            bladesRef.current.style.transform = `rotate(0deg)`;
          }
          return;
        }

        // keep spinning
        step();
      }
    };
    
    animationRef.current = requestAnimationFrame(animate);
  }, []);

  const ensureRunning = useCallback(() => {
    if (runningRef.current) return;
    runningRef.current = true;
    step();
  }, [step]);

  useEffect(() => {
    if (spinning) {
      // starting / resuming mining -> spool up
      // if we were idle, start from IDLE speed for a nicer ramp
      if (!runningRef.current) {
        currentDurRef.current = IDLE_DUR;
      }
      peakCyclesLeftRef.current = 2; // a couple of super-fast spins for a satisfying "whoosh"
      targetDurRef.current = PEAK_DUR;
      ensureRunning();
    } else {
      // stop requested -> switch target to COAST, loop will slow & stop itself
      if (runningRef.current) {
        targetDurRef.current = COAST_DUR;
      } else {
        // fully idle
        currentDurRef.current = IDLE_DUR;
        if (animationRef.current) {
          cancelAnimationFrame(animationRef.current);
        }
        if (bladesRef.current) {
          bladesRef.current.style.transform = `rotate(0deg)`;
        }
      }
    }
  }, [spinning, ensureRunning]);

  // cleanup on unmount
  useEffect(() => {
    return () => {
      runningRef.current = false;
      if (animationRef.current) {
        cancelAnimationFrame(animationRef.current);
      }
    };
  }, []);

  return (
    <div style={{ width: size, height: size, position: "relative" }}>
      {/* Layer 1: Background/Base (ABFan3.1.svg) */}
      <div style={{ position: "absolute", inset: 0 }}>
        <svg width={size} height={size} viewBox="0 0 487 482">
          <g transform="matrix(2.9889,0,0,2.9889,-4129.8,-9563.65)">
            <ellipse cx="1463.21" cy="3279.44" rx="79.461" ry="78.076" fill="#2a2a2a"/>
          </g>
        </svg>
      </div>

      {/* Layer 2: Spinning Blades (ABFan3.2.svg) */}
      <div ref={bladesRef} style={{ position: "absolute", inset: 0 }}>
        <svg width={size} height={size} viewBox="0 0 487 482">
          <defs>
            {/* Blue-grey metallic gradient */}
            <linearGradient id="fanMetallic" x1="0%" y1="0%" x2="100%" y2="100%">
              <stop offset="0%" stopColor="#8fa0b3" />
              <stop offset="25%" stopColor="#6b7a8f" />
              <stop offset="50%" stopColor="#4a5568" />
              <stop offset="75%" stopColor="#5a6b7d" />
              <stop offset="100%" stopColor="#3a4a5c" />
            </linearGradient>
            {/* Light emboss stroke */}
            <linearGradient id="lightEmboss" x1="0%" y1="0%" x2="100%" y2="100%">
              <stop offset="0%" stopColor="#b8c5d1" stopOpacity="0.8" />
              <stop offset="100%" stopColor="#b8c5d1" stopOpacity="0" />
            </linearGradient>
            {/* Dark emboss stroke */}
            <linearGradient id="darkEmboss" x1="0%" y1="0%" x2="100%" y2="100%">
              <stop offset="0%" stopColor="#2a3441" stopOpacity="0" />
              <stop offset="50%" stopColor="#2a3441" stopOpacity="0.4" />
              <stop offset="100%" stopColor="#2a3441" stopOpacity="0.8" />
            </linearGradient>
          </defs>
          
          <g transform="matrix(1,0,0,1,-1219.62,-3041.17)">
            {/* Main metallic fan blades */}
            <path 
              d="M1386.76,3231.29C1386.97,3230.98 1387,3230.58 1386.85,3230.23C1386.7,3229.89 1386.38,3229.64 1386.01,3229.59C1330.93,3221.09 1286.69,3226.59 1249.89,3241.72C1246.46,3243.14 1240.73,3240.67 1241.54,3236.97C1252.44,3187.67 1274.36,3151.11 1304.08,3123.05C1315.75,3112.03 1324.01,3106.01 1373.67,3140.73C1401.91,3160.47 1415.41,3175.29 1433.65,3194.39C1433.95,3194.7 1434.39,3194.81 1434.8,3194.68C1443.78,3191.77 1453.38,3190.2 1463.34,3190.22C1464.73,3190.22 1466.11,3190.25 1467.48,3190.31C1467.86,3190.33 1468.22,3190.16 1468.44,3189.85C1468.66,3189.55 1468.7,3189.15 1468.57,3188.8C1448.53,3137.7 1421.57,3102.79 1389.85,3079.05C1386.89,3076.83 1386.19,3070.72 1389.86,3069.57C1438.77,3054.2 1481.95,3054.58 1521.54,3065.85C1537.1,3070.27 1546.53,3074.29 1540.74,3133.91C1537.45,3167.81 1531.13,3186.71 1523.41,3211.79C1523.29,3212.21 1523.41,3212.66 1523.74,3212.95C1531.92,3220.14 1538.77,3228.77 1543.87,3238.42C1544.04,3238.75 1544.37,3238.97 1544.74,3239.01C1545.11,3239.05 1545.47,3238.9 1545.71,3238.61C1580.7,3195.96 1597.94,3155.54 1602.96,3116.65C1603.43,3113.03 1608.47,3109.37 1611.32,3111.91C1649.36,3145.8 1670.66,3182.71 1680.57,3222.03C1684.46,3237.47 1685.65,3247.5 1630.24,3272.45C1598.74,3286.64 1578.93,3290.74 1552.98,3296.74C1552.56,3296.83 1552.23,3297.17 1552.14,3297.59C1549.86,3308.42 1545.58,3318.53 1539.7,3327.54C1539.49,3327.86 1539.46,3328.26 1539.61,3328.6C1539.76,3328.95 1540.08,3329.19 1540.45,3329.25C1595.53,3337.7 1639.78,3332.17 1676.56,3317.01C1679.99,3315.6 1685.73,3318.06 1684.91,3321.76C1674.05,3371.07 1652.16,3407.64 1622.46,3435.73C1610.8,3446.76 1602.55,3452.78 1552.85,3418.1C1524.6,3398.38 1511.09,3383.57 1492.83,3364.48C1492.54,3364.17 1492.09,3364.06 1491.69,3364.19C1482.69,3367.11 1473.07,3368.69 1463.08,3368.67C1461.72,3368.67 1460.36,3368.64 1459.01,3368.58C1458.63,3368.56 1458.27,3368.74 1458.06,3369.04C1457.84,3369.35 1457.79,3369.74 1457.92,3370.09C1478,3421.18 1504.98,3456.07 1536.73,3479.79C1539.68,3482 1540.38,3488.12 1536.72,3489.27C1487.82,3504.67 1444.64,3504.32 1405.04,3493.08C1389.48,3488.66 1380.05,3484.66 1385.79,3425.03C1389.06,3391.13 1395.36,3372.23 1403.06,3347.14C1403.19,3346.72 1403.06,3346.27 1402.73,3345.98C1394.52,3338.76 1387.64,3330.1 1382.53,3320.41C1382.36,3320.08 1382.03,3319.86 1381.66,3319.82C1381.29,3319.78 1380.93,3319.93 1380.69,3320.22C1345.67,3362.84 1328.4,3403.26 1323.35,3442.14C1322.88,3445.76 1317.84,3449.41 1314.99,3446.87C1276.97,3412.95 1255.7,3376.03 1245.81,3336.71C1241.93,3321.26 1240.75,3311.23 1296.18,3286.32C1327.69,3272.15 1347.51,3268.07 1373.46,3262.09C1373.88,3261.99 1374.21,3261.66 1374.3,3261.24C1376.59,3250.41 1380.87,3240.3 1386.76,3231.29ZM1463.33,3199.08C1418.19,3199.02 1381.49,3234.97 1381.42,3279.33C1381.36,3323.68 1417.95,3359.74 1463.1,3359.81C1508.24,3359.87 1544.94,3323.91 1545,3279.56C1545.07,3235.2 1508.47,3199.14 1463.33,3199.08ZM1463.21,3206.98C1503.92,3206.98 1536.96,3239.45 1536.96,3279.44C1536.96,3319.44 1503.92,3351.91 1463.21,3351.91C1422.51,3351.91 1389.46,3319.44 1389.46,3279.44C1389.46,3239.45 1422.51,3206.98 1463.21,3206.98Z" 
              fill="url(#fanMetallic)"
            />
            
            {/* Light emboss highlight */}
            <path 
              d="M1386.76,3231.29C1386.97,3230.98 1387,3230.58 1386.85,3230.23C1386.7,3229.89 1386.38,3229.64 1386.01,3229.59C1330.93,3221.09 1286.69,3226.59 1249.89,3241.72C1246.46,3243.14 1240.73,3240.67 1241.54,3236.97C1252.44,3187.67 1274.36,3151.11 1304.08,3123.05C1315.75,3112.03 1324.01,3106.01 1373.67,3140.73C1401.91,3160.47 1415.41,3175.29 1433.65,3194.39C1433.95,3194.7 1434.39,3194.81 1434.8,3194.68C1443.78,3191.77 1453.38,3190.2 1463.34,3190.22C1464.73,3190.22 1466.11,3190.25 1467.48,3190.31C1467.86,3190.33 1468.22,3190.16 1468.44,3189.85C1468.66,3189.55 1468.7,3189.15 1468.57,3188.8C1448.53,3137.7 1421.57,3102.79 1389.85,3079.05C1386.89,3076.83 1386.19,3070.72 1389.86,3069.57C1438.77,3054.2 1481.95,3054.58 1521.54,3065.85C1537.1,3070.27 1546.53,3074.29 1540.74,3133.91C1537.45,3167.81 1531.13,3186.71 1523.41,3211.79C1523.29,3212.21 1523.41,3212.66 1523.74,3212.95C1531.92,3220.14 1538.77,3228.77 1543.87,3238.42C1544.04,3238.75 1544.37,3238.97 1544.74,3239.01C1545.11,3239.05 1545.47,3238.9 1545.71,3238.61C1580.7,3195.96 1597.94,3155.54 1602.96,3116.65C1603.43,3113.03 1608.47,3109.37 1611.32,3111.91C1649.36,3145.8 1670.66,3182.71 1680.57,3222.03C1684.46,3237.47 1685.65,3247.5 1630.24,3272.45C1598.74,3286.64 1578.93,3290.74 1552.98,3296.74C1552.56,3296.83 1552.23,3297.17 1552.14,3297.59C1549.86,3308.42 1545.58,3318.53 1539.7,3327.54C1539.49,3327.86 1539.46,3328.26 1539.61,3328.6C1539.76,3328.95 1540.08,3329.19 1540.45,3329.25C1595.53,3337.7 1639.78,3332.17 1676.56,3317.01C1679.99,3315.6 1685.73,3318.06 1684.91,3321.76C1674.05,3371.07 1652.16,3407.64 1622.46,3435.73C1610.8,3446.76 1602.55,3452.78 1552.85,3418.1C1524.6,3398.38 1511.09,3383.57 1492.83,3364.48C1492.54,3364.17 1492.09,3364.06 1491.69,3364.19C1482.69,3367.11 1473.07,3368.69 1463.08,3368.67C1461.72,3368.67 1460.36,3368.64 1459.01,3368.58C1458.63,3368.56 1458.27,3368.74 1458.06,3369.04C1457.84,3369.35 1457.79,3369.74 1457.92,3370.09C1478,3421.18 1504.98,3456.07 1536.73,3479.79C1539.68,3482 1540.38,3488.12 1536.72,3489.27C1487.82,3504.67 1444.64,3504.32 1405.04,3493.08C1389.48,3488.66 1380.05,3484.66 1385.79,3425.03C1389.06,3391.13 1395.36,3372.23 1403.06,3347.14C1403.19,3346.72 1403.06,3346.27 1402.73,3345.98C1394.52,3338.76 1387.64,3330.1 1382.53,3320.41C1382.36,3320.08 1382.03,3319.86 1381.66,3319.82C1381.29,3319.78 1380.93,3319.93 1380.69,3320.22C1345.67,3362.84 1328.4,3403.26 1323.35,3442.14C1322.88,3445.76 1317.84,3449.41 1314.99,3446.87C1276.97,3412.95 1255.7,3376.03 1245.81,3336.71C1241.93,3321.26 1240.75,3311.23 1296.18,3286.32C1327.69,3272.15 1347.51,3268.07 1373.46,3262.09C1373.88,3261.99 1374.21,3261.66 1374.3,3261.24C1376.59,3250.41 1380.87,3240.3 1386.76,3231.29ZM1463.33,3199.08C1418.19,3199.02 1381.49,3234.97 1381.42,3279.33C1381.36,3323.68 1417.95,3359.74 1463.1,3359.81C1508.24,3359.87 1544.94,3323.91 1545,3279.56C1545.07,3235.2 1508.47,3199.14 1463.33,3199.08ZM1463.21,3206.98C1503.92,3206.98 1536.96,3239.45 1536.96,3279.44C1536.96,3319.44 1503.92,3351.91 1463.21,3351.91C1422.51,3351.91 1389.46,3319.44 1389.46,3279.44C1389.46,3239.45 1422.51,3206.98 1463.21,3206.98Z" 
              fill="none"
              stroke="url(#lightEmboss)"
              strokeWidth="1.5"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
            
            {/* Dark emboss shadow */}
            <path 
              d="M1386.76,3231.29C1386.97,3230.98 1387,3230.58 1386.85,3230.23C1386.7,3229.89 1386.38,3229.64 1386.01,3229.59C1330.93,3221.09 1286.69,3226.59 1249.89,3241.72C1246.46,3243.14 1240.73,3240.67 1241.54,3236.97C1252.44,3187.67 1274.36,3151.11 1304.08,3123.05C1315.75,3112.03 1324.01,3106.01 1373.67,3140.73C1401.91,3160.47 1415.41,3175.29 1433.65,3194.39C1433.95,3194.7 1434.39,3194.81 1434.8,3194.68C1443.78,3191.77 1453.38,3190.2 1463.34,3190.22C1464.73,3190.22 1466.11,3190.25 1467.48,3190.31C1467.86,3190.33 1468.22,3190.16 1468.44,3189.85C1468.66,3189.55 1468.7,3189.15 1468.57,3188.8C1448.53,3137.7 1421.57,3102.79 1389.85,3079.05C1386.89,3076.83 1386.19,3070.72 1389.86,3069.57C1438.77,3054.2 1481.95,3054.58 1521.54,3065.85C1537.1,3070.27 1546.53,3074.29 1540.74,3133.91C1537.45,3167.81 1531.13,3186.71 1523.41,3211.79C1523.29,3212.21 1523.41,3212.66 1523.74,3212.95C1531.92,3220.14 1538.77,3228.77 1543.87,3238.42C1544.04,3238.75 1544.37,3238.97 1544.74,3239.01C1545.11,3239.05 1545.47,3238.9 1545.71,3238.61C1580.7,3195.96 1597.94,3155.54 1602.96,3116.65C1603.43,3113.03 1608.47,3109.37 1611.32,3111.91C1649.36,3145.8 1670.66,3182.71 1680.57,3222.03C1684.46,3237.47 1685.65,3247.5 1630.24,3272.45C1598.74,3286.64 1578.93,3290.74 1552.98,3296.74C1552.56,3296.83 1552.23,3297.17 1552.14,3297.59C1549.86,3308.42 1545.58,3318.53 1539.7,3327.54C1539.49,3327.86 1539.46,3328.26 1539.61,3328.6C1539.76,3328.95 1540.08,3329.19 1540.45,3329.25C1595.53,3337.7 1639.78,3332.17 1676.56,3317.01C1679.99,3315.6 1685.73,3318.06 1684.91,3321.76C1674.05,3371.07 1652.16,3407.64 1622.46,3435.73C1610.8,3446.76 1602.55,3452.78 1552.85,3418.1C1524.6,3398.38 1511.09,3383.57 1492.83,3364.48C1492.54,3364.17 1492.09,3364.06 1491.69,3364.19C1482.69,3367.11 1473.07,3368.69 1463.08,3368.67C1461.72,3368.67 1460.36,3368.64 1459.01,3368.58C1458.63,3368.56 1458.27,3368.74 1458.06,3369.04C1457.84,3369.35 1457.79,3369.74 1457.92,3370.09C1478,3421.18 1504.98,3456.07 1536.73,3479.79C1539.68,3482 1540.38,3488.12 1536.72,3489.27C1487.82,3504.67 1444.64,3504.32 1405.04,3493.08C1389.48,3488.66 1380.05,3484.66 1385.79,3425.03C1389.06,3391.13 1395.36,3372.23 1403.06,3347.14C1403.19,3346.72 1403.06,3346.27 1402.73,3345.98C1394.52,3338.76 1387.64,3330.1 1382.53,3320.41C1382.36,3320.08 1382.03,3319.86 1381.66,3319.82C1381.29,3319.78 1380.93,3319.93 1380.69,3320.22C1345.67,3362.84 1328.4,3403.26 1323.35,3442.14C1322.88,3445.76 1317.84,3449.41 1314.99,3446.87C1276.97,3412.95 1255.7,3376.03 1245.81,3336.71C1241.93,3321.26 1240.75,3311.23 1296.18,3286.32C1327.69,3272.15 1347.51,3268.07 1373.46,3262.09C1373.88,3261.99 1374.21,3261.66 1374.3,3261.24C1376.59,3250.41 1380.87,3240.3 1386.76,3231.29ZM1463.33,3199.08C1418.19,3199.02 1381.49,3234.97 1381.42,3279.33C1381.36,3323.68 1417.95,3359.74 1463.1,3359.81C1508.24,3359.87 1544.94,3323.91 1545,3279.56C1545.07,3235.2 1508.47,3199.14 1463.33,3199.08ZM1463.21,3206.98C1503.92,3206.98 1536.96,3239.45 1536.96,3279.44C1536.96,3319.44 1503.92,3351.91 1463.21,3351.91C1422.51,3351.91 1389.46,3319.44 1389.46,3279.44C1389.46,3239.45 1422.51,3206.98 1463.21,3206.98Z" 
              fill="none"
              stroke="url(#darkEmboss)"
              strokeWidth="2"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </g>
        </svg>
      </div>

      {/* Layer 3: Grill Overlay (ABFan3.3.svg) */}
      <div style={{ position: "absolute", inset: 0 }}>
        <svg width={size} height={size} viewBox="0 0 487 482">
          <defs>
            <linearGradient id="fanGrill1" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(169.649,375.05,-347.532,183.082,122.827,110.08)">
              <stop offset="0" stopColor="rgb(109,136,197)" stopOpacity="1"/>
              <stop offset="1" stopColor="rgb(67,87,168)" stopOpacity="1"/>
            </linearGradient>
            <linearGradient id="fanGrill2" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(191.782,430.353,-398.777,206.968,75.9255,179.299)">
              <stop offset="0" stopColor="rgb(163,185,237)" stopOpacity="1"/>
              <stop offset="0.2" stopColor="rgb(116,134,187)" stopOpacity="1"/>
              <stop offset="0.42" stopColor="rgb(67,82,135)" stopOpacity="1"/>
              <stop offset="1" stopColor="rgb(44,57,111)" stopOpacity="1"/>
            </linearGradient>
          </defs>
          
          <g transform="matrix(10.3012,0,0,9.54536,-2484.88,-4091.92)">
            <path d="M264.871,428.682C277.863,428.682 288.412,439.867 288.412,453.644C288.412,467.421 277.863,478.606 264.871,478.606C251.878,478.606 241.33,467.421 241.33,453.644C241.33,439.867 251.878,428.682 264.871,428.682ZM286.686,459.659C286.839,459.659 286.972,459.547 287.009,459.387C287.279,458.196 287.467,456.97 287.567,455.718C287.575,455.618 287.544,455.52 287.481,455.446C287.418,455.372 287.33,455.33 287.237,455.33L242.292,455.33C242.199,455.33 242.11,455.372 242.048,455.446C241.985,455.52 241.953,455.618 241.961,455.718C242.061,456.97 242.25,458.196 242.52,459.387C242.557,459.547 242.69,459.659 242.842,459.659L286.686,459.659ZM243.249,446.003C243.105,446.003 242.977,446.103 242.933,446.252C242.583,447.438 242.315,448.664 242.137,449.921C242.122,450.024 242.15,450.128 242.213,450.207C242.276,450.286 242.368,450.332 242.465,450.332C246.601,450.332 282.928,450.332 287.064,450.332C287.161,450.332 287.252,450.286 287.315,450.207C287.379,450.128 287.407,450.024 287.392,449.921C287.214,448.664 286.946,447.438 286.596,446.252C286.552,446.103 286.424,446.003 286.28,446.003L243.249,446.003ZM253.256,473.985C253.107,473.985 252.976,474.092 252.936,474.247C252.896,474.402 252.956,474.566 253.084,474.65C256.505,476.824 260.499,478.074 264.764,478.074C269.03,478.074 273.024,476.824 276.444,474.649C276.571,474.566 276.631,474.402 276.592,474.247C276.552,474.093 276.421,473.986 276.273,473.986C272.049,473.985 257.48,473.985 253.256,473.985ZM282.403,468.987C282.503,468.987 282.598,468.938 282.661,468.854C283.515,467.71 284.275,466.483 284.929,465.185C284.984,465.075 284.981,464.94 284.921,464.832C284.862,464.724 284.753,464.658 284.637,464.658C280.133,464.658 249.395,464.658 244.892,464.658C244.775,464.658 244.667,464.724 244.607,464.832C244.547,464.94 244.544,465.075 244.6,465.186C245.254,466.483 246.014,467.71 246.868,468.854C246.931,468.938 247.026,468.987 247.126,468.987L282.403,468.987ZM248.396,436.676C248.305,436.676 248.219,436.715 248.156,436.786C247.157,437.912 246.257,439.14 245.471,440.454C245.405,440.564 245.401,440.704 245.459,440.818C245.517,440.933 245.629,441.004 245.75,441.004C250.293,441.005 279.236,441.005 283.779,441.005C283.9,441.005 284.011,440.933 284.07,440.818C284.128,440.704 284.123,440.564 284.058,440.453C283.272,439.14 282.372,437.912 281.372,436.786C281.31,436.715 281.223,436.676 281.133,436.676L248.396,436.676ZM273.359,431.677C273.517,431.677 273.653,431.557 273.684,431.39C273.716,431.223 273.634,431.055 273.488,430.989C270.799,429.803 267.853,429.148 264.764,429.148C261.676,429.148 258.73,429.803 256.041,430.991C255.896,431.057 255.815,431.224 255.846,431.39C255.877,431.556 256.013,431.676 256.17,431.676C259.942,431.677 269.587,431.677 273.359,431.677Z" fill="url(#fanGrill1)"/>
          </g>
          
          <g transform="matrix(10.3012,0,0,9.54536,-2484.88,-4091.92)">
            <path d="M255.899,431.524C255.96,431.617 256.059,431.676 256.17,431.676C259.942,431.677 269.587,431.677 273.359,431.677C273.419,431.677 273.476,431.66 273.525,431.629C273.576,431.707 273.597,431.806 273.578,431.905C273.547,432.072 273.411,432.192 273.253,432.192C269.481,432.192 259.835,432.192 256.063,432.19C255.906,432.19 255.771,432.071 255.739,431.905C255.711,431.752 255.777,431.6 255.899,431.524ZM262.522,478.483C259.942,478.212 257.483,477.497 255.215,476.413C254.446,476.04 253.699,475.623 252.978,475.164C252.85,475.081 252.79,474.916 252.83,474.762C252.854,474.669 252.91,474.593 252.983,474.548C253.009,474.588 253.043,474.623 253.084,474.65C256.505,476.824 260.499,478.074 264.764,478.074C269.027,478.074 273.019,476.826 276.437,474.653C276.459,474.685 276.475,474.722 276.485,474.762C276.525,474.916 276.465,475.08 276.338,475.163C272.918,477.339 268.923,478.588 264.658,478.588C263.938,478.588 263.225,478.553 262.522,478.483ZM241.978,455.923C242.082,457.104 242.265,458.261 242.52,459.387C242.557,459.547 242.69,459.659 242.842,459.659L286.686,459.659C286.839,459.659 286.972,459.547 287.009,459.387C287.026,459.311 287.043,459.234 287.059,459.158C287.011,459.407 286.958,459.655 286.902,459.902C286.866,460.062 286.733,460.174 286.58,460.174L242.736,460.174C242.583,460.174 242.451,460.062 242.414,459.902C242.144,458.71 241.955,457.485 241.855,456.233C241.847,456.133 241.879,456.034 241.941,455.961C241.953,455.947 241.965,455.935 241.978,455.923ZM242.363,448.58C242.276,449.022 242.201,449.47 242.137,449.921C242.122,450.024 242.15,450.128 242.213,450.207C242.276,450.286 242.368,450.332 242.465,450.332C246.601,450.332 282.928,450.332 287.064,450.332C287.135,450.332 287.204,450.307 287.261,450.262C287.269,450.32 287.278,450.378 287.286,450.435C287.3,450.538 287.272,450.643 287.209,450.722C287.146,450.801 287.054,450.847 286.958,450.847C282.821,450.847 246.495,450.847 242.358,450.846C242.262,450.846 242.17,450.801 242.107,450.722C242.044,450.643 242.016,450.538 242.03,450.435C242.119,449.809 242.23,449.19 242.363,448.58ZM244.618,465.221C245.268,466.505 246.022,467.72 246.868,468.854C246.931,468.938 247.026,468.987 247.126,468.987L282.403,468.987C282.503,468.987 282.598,468.938 282.661,468.854C283.473,467.767 284.199,466.604 284.831,465.378C284.875,465.48 284.873,465.6 284.822,465.7C284.169,466.997 283.409,468.225 282.555,469.368C282.492,469.452 282.397,469.501 282.297,469.501L247.019,469.501C246.919,469.501 246.824,469.452 246.761,469.368C245.907,468.225 245.147,466.997 244.493,465.7C244.438,465.589 244.441,465.455 244.501,465.347C244.53,465.294 244.57,465.251 244.618,465.221ZM245.457,440.814C245.458,440.816 245.459,440.817 245.459,440.818C245.517,440.933 245.629,441.004 245.75,441.004C250.293,441.005 279.236,441.005 283.779,441.005C283.838,441.005 283.895,440.987 283.945,440.956C283.947,440.96 283.949,440.964 283.952,440.968C284.017,441.078 284.022,441.218 283.963,441.333C283.905,441.448 283.793,441.519 283.672,441.519C279.13,441.519 250.187,441.519 245.644,441.519C245.523,441.519 245.411,441.448 245.353,441.333C245.295,441.218 245.299,441.078 245.364,440.968C245.395,440.917 245.426,440.866 245.457,440.814Z" fill="rgb(163,185,237)"/>
          </g>
          
          <g transform="matrix(9.03981,0,0,8.37654,-1888.73,-4543.07)">
            <path d="M245.79,545.681C245.763,545.659 245.734,545.639 245.701,545.625C242.637,544.273 239.279,543.527 235.76,543.527C232.241,543.527 228.884,544.273 225.819,545.626C225.788,545.641 225.759,545.659 225.733,545.681C225.665,545.623 225.615,545.54 225.597,545.443C225.562,545.253 225.654,545.063 225.819,544.988C228.884,543.635 232.241,542.888 235.76,542.888C239.279,542.888 242.637,543.635 245.701,544.986C245.867,545.062 245.961,545.253 245.925,545.443C245.907,545.54 245.858,545.623 245.79,545.681ZM261.708,573.591C261.692,573.556 261.671,573.523 261.647,573.494C261.575,573.41 261.474,573.362 261.368,573.362L210.152,573.362C210.046,573.362 209.945,573.41 209.874,573.494C209.849,573.523 209.828,573.556 209.812,573.591C209.799,573.45 209.787,573.308 209.775,573.166C209.766,573.052 209.802,572.939 209.874,572.855C209.945,572.771 210.046,572.724 210.152,572.724L261.368,572.724C261.474,572.724 261.575,572.772 261.647,572.856C261.718,572.94 261.754,573.052 261.745,573.166C261.734,573.308 261.721,573.45 261.708,573.591ZM261.492,566.836C261.29,565.53 261.003,564.255 260.638,563.017C260.588,562.848 260.442,562.733 260.278,562.733L211.242,562.733C211.078,562.733 210.933,562.848 210.882,563.017C210.517,564.255 210.23,565.53 210.029,566.836C209.981,566.754 209.962,566.656 209.975,566.559C210.178,565.127 210.483,563.73 210.882,562.378C210.933,562.209 211.078,562.095 211.242,562.095L260.278,562.095C260.442,562.095 260.588,562.209 260.638,562.378C261.037,563.73 261.342,565.127 261.545,566.559C261.559,566.656 261.54,566.754 261.492,566.836ZM257.678,556.297C256.798,554.843 255.796,553.481 254.685,552.23C254.614,552.15 254.516,552.104 254.413,552.104L217.108,552.104C217.005,552.104 216.906,552.15 216.835,552.23C215.725,553.481 214.722,554.842 213.843,556.296C213.81,556.266 213.783,556.229 213.761,556.187C213.695,556.056 213.7,555.897 213.774,555.771C214.67,554.275 215.696,552.875 216.835,551.591C216.906,551.511 217.005,551.466 217.108,551.466L254.413,551.466C254.516,551.466 254.614,551.511 254.685,551.592C255.824,552.875 256.85,554.275 257.746,555.771C257.821,555.897 257.826,556.056 257.759,556.187C257.738,556.229 257.71,556.266 257.678,556.297ZM249.108,594.709C249.043,594.653 248.962,594.621 248.875,594.621C244.061,594.62 227.459,594.62 222.646,594.62C222.558,594.62 222.475,594.653 222.41,594.709C222.292,594.608 222.24,594.439 222.281,594.28C222.327,594.103 222.476,593.981 222.646,593.981C227.459,593.981 244.061,593.981 248.875,593.983C249.044,593.983 249.192,594.104 249.238,594.28C249.279,594.44 249.226,594.608 249.108,594.709ZM258.664,584.101C258.594,584.031 258.503,583.991 258.405,583.991C253.274,583.991 218.247,583.991 213.115,583.991C213.018,583.991 212.926,584.031 212.857,584.101C212.832,584.052 212.807,584.003 212.782,583.954C212.719,583.828 212.722,583.675 212.79,583.551C212.858,583.428 212.982,583.353 213.115,583.353C218.247,583.353 253.274,583.353 258.405,583.353C258.538,583.353 258.662,583.428 258.73,583.552C258.798,583.675 258.801,583.828 258.738,583.954C258.713,584.003 258.689,584.052 258.664,584.101Z" fill="url(#fanGrill2)"/>
          </g>
        </svg>
      </div>
    </div>
  );
}
